{
  "name": "one",
  "version": "1",
  "items": [
    {
      "type": "graphql",
      "name": "imdb",
      "filename": "imdb.bru",
      "seq": 1,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [],
        "params": [],
        "body": {
          "mode": "none",
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Average Rating for Suicide Squad",
      "filename": "Average Rating for Suicide Squad.bru",
      "seq": 3,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  title(id: \"tt6334354\") {\n    ratingsSummary {\n      aggregateRating\n      voteCount\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Get Plot Texts and Genres",
      "filename": "Get Plot Texts and Genres.bru",
      "seq": 4,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  title(id: \"tt6334354\") {\n    ratingsSummary {\n      aggregateRating\n      voteCount\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Runtime, Release Date, Coloration",
      "filename": "Runtime, Release Date, Coloration.bru",
      "seq": 5,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  title(id: \"tt0910970\") {\n    runtime {\n      seconds\n    }\n    releaseDate {\n      day\n      month\n      year\n    }\n    technicalSpecifications {\n      colorations {\n        items {\n          text\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Credits",
      "filename": "Credits.bru",
      "seq": 6,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  title(id: \"tt0910970\") {\n    runtime {\n      seconds\n    }\n    releaseDate {\n      day\n      month\n      year\n    }\n    technicalSpecifications {\n      colorations {\n        items {\n          text\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Querying multiple categories of credits",
      "filename": "Querying multiple categories of credits.bru",
      "seq": 7,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  #Get Joker\n  title(id: \"tt7286456\") {\n    # Get first five directors\n    DIRECTORS: credits(first: 5, filter: { categories: [\"director\"] }) {\n      edges {\n        node {\n          name {\n            nameText {\n              text\n            }\n          }\n        }\n      }\n    }\n    # Get first five writers\n    WRITERS: credits(first: 5, filter: { categories: [\"writer\"] }) {\n      edges {\n        node {\n          name {\n            nameText {\n              text\n            }\n          }\n        }\n      }\n    }\n    # Get first five cast\n    CAST: credits(first: 5, filter: { categories: [\"actor\", \"actress\"] }) {\n      edges {\n        node {\n          name {\n            nameText {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Known For Titles from Credits",
      "filename": "Known For Titles from Credits.bru",
      "seq": 8,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  #Get Joker\n  title(id: \"tt7286456\") {\n    # Get first five directors\n    DIRECTORS: credits(first: 5, filter: { categories: [\"director\"] }) {\n      edges {\n        node {\n          name {\n            nameText {\n              text\n            }\n          }\n        }\n      }\n    }\n    # Get first five writers\n    WRITERS: credits(first: 5, filter: { categories: [\"writer\"] }) {\n      edges {\n        node {\n          name {\n            nameText {\n              text\n            }\n          }\n        }\n      }\n    }\n    # Get first five cast\n    CAST: credits(first: 5, filter: { categories: [\"actor\", \"actress\"] }) {\n      edges {\n        node {\n          name {\n            nameText {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Title Keywords",
      "filename": "Title Keywords.bru",
      "seq": 9,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "{\n  # Get Inception and The Dark Knight\n  titles(ids: [\"tt1375666\", \"tt0468569\"]) {\n    # Get the first keyword for each title\n    keywords(first: 1) {\n      edges {\n        node {\n          # Get the keyword text\n          keyword {\n            text {\n              text\n            }\n          }\n          # Get the number of interesting votes for this keyword\n          interestScore {\n            usersInterested\n            usersVoted\n          }\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Name Awards",
      "filename": "Name Awards.bru",
      "seq": 10,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  # Get Jennifer Lawrence, Morgan Freeman and Patrick Swayzee\n  names(ids: [\"nm2225369\", \"nm0000664\", \"nm0000151\"]) {\n    nameText {\n      text\n    }\n    # Get the first 3 awards that a given name won\n    awardNominations(first: 3, filter: { wins: WINS_ONLY }) {\n      edges {\n        node {\n          award {\n            # Get the award text for a given award\n            text\n            # Get the name of the event the award was given\n            event {\n              text\n            }\n            # Get the year of the award\n            year\n          }\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Episodes",
      "filename": "Episodes.bru",
      "seq": 11,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  # Get Futurama\n  title(id: \"tt0149460\") {\n    # Get the title type of Futurama (TV Series)\n    titleType {\n      text\n      canHaveEpisodes\n    }\n    # Get the first three episodes of Futurama\n    episodes {\n      episodes(first: 3) {\n        edges {\n          node {\n            # Get the names of the episodes\n            titleText {\n              text\n            }\n          }\n        }\n        pageInfo{\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "Episodes - Pagination",
      "filename": "Episodes - Pagination.bru",
      "seq": 12,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  # Get Futurama\n  title(id: \"tt0149460\") {\n    # Get the title type of Futurama (TV Series)\n    titleType {\n      text\n      canHaveEpisodes\n    }\n    # Get the next three episodes of Futurama\n    episodes {\n      episodes(first: 3, after:\"dHQwNzU2ODgy\") {\n        edges {\n          node {\n            # Get the names of the episodes\n            titleText {\n              text\n            }\n          }\n        }\n        pageInfo{\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n  }\n}"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    },
    {
      "type": "graphql",
      "name": "AKAS",
      "filename": "AKAS.bru",
      "seq": 13,
      "settings": {
        "encodeUrl": true
      },
      "tags": [],
      "request": {
        "url": "https://api.graphql.imdb.com/",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "enabled": true
          }
        ],
        "params": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "query {\n  title(id: \"tt0133093\") {\n    \n    id\n    titleText {\n      text\n    }\n    originalTitleText {text}\n    akas(first: 50) {\n      edges {\n        node {\n          country {text id}\n          \n          text\n        }\n      }\n    }\n  }\n}\n"
          },
          "formUrlEncoded": [],
          "multipartForm": [],
          "file": []
        },
        "script": {},
        "vars": {},
        "assertions": [],
        "tests": "",
        "docs": "",
        "auth": {
          "mode": "inherit"
        }
      }
    }
  ],
  "environments": [],
  "brunoConfig": {
    "version": "1",
    "name": "one",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ],
    "size": 0,
    "filesCount": 0
  }
}